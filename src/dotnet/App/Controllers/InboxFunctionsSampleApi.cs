/*
 * SOCOMAP
 *
 * This is the Api for the new Socomap Protocol
 *
 * OpenAPI spec version: 0.0.1
 * Contact: development@infotech.de
 * Generated by: https://openapi-generator.tech
 */

using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;
using Socomap.Adapter;
using Swashbuckle.AspNetCore.Annotations;
using System;
using System.ComponentModel.DataAnnotations;

namespace Org.OpenAPITools.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    public class InboxFunctionsSampleApiController : ControllerBase
    {
        private IInboxAdapter inboxAdapter;

        public InboxFunctionsSampleApiController(IInboxAdapter inboxAdapter)
        {
            this.inboxAdapter = inboxAdapter ?? throw new ArgumentNullException("inboxAdapter");
        }

        /// <summary>
        /// registers a new inbox
        /// </summary>
        /// <remarks>This Function creates a new inbox. New Transmissions can be send to this inbox.</remarks>
        /// <param name="inboxesCreateRequest"></param>
        /// <response code="200">OK, new inbox is created</response>
        [HttpPost]
        [Route("/v1/inboxes/create")]
        [ValidateModelState]
        [SwaggerOperation("InboxesCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(InboxesCreateResponse200), description: "OK, new inbox is created")]
        public virtual IActionResult InboxesCreate([FromBody]InboxesCreateRequest inboxesCreateRequest)
        {
            return inboxAdapter.InboxesCreate(inboxesCreateRequest);
        }

        /// <summary>
        /// get next inbound transmission
        /// </summary>
        /// <remarks>returns the next inbound transmission. successive calls to this function will return the same transmission, until you confirm the reception.</remarks>
        /// <param name="id">Id of the Inbox</param>
        /// <response code="200">returns the wsr message</response>
        /// <response code="204">no messages in inbox</response>
        /// <response code="401">unauthenticated</response>
        [HttpGet]
        [Route("/v1/inboxes/{id}/transmissions/next")]
        [ValidateModelState]
        [SwaggerOperation("InboxesNextTransmission")]
        [SwaggerResponse(statusCode: 200, type: typeof(InboxesTransmissionNextResponse200), description: "returns the wsr message")]
        public virtual IActionResult InboxesNextTransmission([FromRoute][Required]string id)
        {
            return inboxAdapter.InboxesNextTransmission(id);
        }

        /// <summary>
        /// Update Transmission State
        /// </summary>
        /// <remarks>Sets the Transmission State </remarks>
        /// <param name="id">the transaction id to confirm</param>
        /// <param name="tid">Transmission ID</param>
        /// <response code="200">OK</response>
        /// <response code="401">unauthenticated</response>
        /// <response code="404">transmission or onbox not exists</response>
        [HttpPost]
        [Route("/v1/inboxes/{id}/transmissions/{tid}/confirm-received")]
        [ValidateModelState]
        [SwaggerOperation("Inboxesidtransmissionstidstate")]
        public virtual IActionResult Inboxesidtransmissionstidstate([FromRoute][Required]string id, [FromRoute][Required]string tid)
        {
            return inboxAdapter.ConfirmTransmissionReceipt(id, tid);
        }
    }
}
